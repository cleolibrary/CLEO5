{$CLEO .s}
{$INCLUDE_ONCE ../cleo_tester.inc}

script_name '0AE1'
test("0AE1 (get_random_char_in_sphere_no_save_recursive)", tests)
terminate_this_custom_script


function tests
    before_each(@setup)
    after_each(@cleanup)

    it("should return alive NPC in sphere", test1)
    it("should return any NPC in sphere", test2)
    it("should return player char in sphere", test3)
    it("should find multiple characters in sphere", test4)
    return
    
    
    :setup
        while not is_player_playing $player1
            wait 0
        end
        
        set_player_control $player1 {state} false
        set_police_ignore_player {player} $player1 {state} true
        set_char_proofs $scplayer {bulletProof} true {fireProof} true {explosionProof} true {collisionProof} true {meleeProof} true
        
        set_area_visible {areaId} 0
        set_char_area_visible $scplayer {areaId} 0
        warp_char_from_car_to_coord $scplayer {pos} 2737.8 -1760.3 43.15
        set_char_heading $scplayer {heading} 0.0
        restore_camera_jumpcut
        load_scene {pos} 2737.8 -1760.3 43.15
        request_collision {xy} 2737.8 -1760.3
        
        set_ped_density_multiplier {multiplier} 0.0
        set_car_density_multiplier {multiplier} 0.0
        clear_area {pos} 0.0 0.0 0.0 {radius} 100000.0 {clearParticles} true
    return


    :cleanup
        set_player_control $player1 {state} true
        set_police_ignore_player {player} $player1 {state} false
        set_char_proofs $scplayer {bulletProof} false {fireProof} false {explosionProof} false {collisionProof} false {meleeProof} false
        
        clear_area {pos} 0.0 0.0 0.0 {radius} 100000.0 {clearParticles} true
    return


    function test1()
        int foundPed
        
        float x, y, z
        x, y, z = get_char_coordinates $scplayer

        // no peds nearby
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 1 // CharSearchFilter.AnyAliveNPC
        assert_result_false()
        assert_eq(foundPed, -1)
        
        // mission ped
        int pedHandle = SpawnPed(7)
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 1 // CharSearchFilter.AnyAliveNPC
        assert_result_true()
        assert_eq(foundPed, pedHandle)
        
        // non-mission ped
        mark_char_as_no_longer_needed foundPed
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 1 // CharSearchFilter.AnyAliveNPC
        assert_result_true()
        assert_eq(foundPed, pedHandle)
        
        // dead mission ped
        delete_char pedHandle
        pedHandle = SpawnPed(7)
        task_die {handle} pedHandle
        wait 0
        wait 0
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 1 // CharSearchFilter.AnyAliveNPC
        assert_result_false()
        assert_eq(foundPed, -1)
        
        // dead non-mission ped
        mark_char_as_no_longer_needed foundPed
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 1 // CharSearchFilter.AnyAliveNPC
        assert_result_false()
        assert_eq(foundPed, -1)
        
        delete_char pedHandle
    end
    
    
    function test2()
        int foundPed
        
        float x, y, z
        x, y, z = get_char_coordinates $scplayer

        // no peds nearby
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 0 // CharSearchFilter.AnyNPC
        assert_result_false()
        assert_eq(foundPed, -1)
        
        // mission ped
        int pedHandle = SpawnPed(7)
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 0 // CharSearchFilter.AnyNPC
        assert_result_true()
        assert_eq(foundPed, pedHandle)
        
        // non-mission ped
        mark_char_as_no_longer_needed foundPed
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 0 // CharSearchFilter.AnyNPC
        assert_result_true()
        assert_eq(foundPed, pedHandle)
        
        // dead mission ped
        delete_char pedHandle
        pedHandle = SpawnPed(7)
        task_die {handle} pedHandle
        wait 0
        wait 0
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 0 // CharSearchFilter.AnyNPC
        assert_result_true()
        assert_eq(foundPed, pedHandle)
        
        // dead non-mission ped
        mark_char_as_no_longer_needed foundPed
        foundPed = 0x666
        foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} 0 // CharSearchFilter.AnyNPC
        assert_result_true()
        assert_eq(foundPed, pedHandle)
        
        delete_char pedHandle
    end
end


function test3()
    int foundPed
    
    float x, y, z
    x, y, z = get_char_coordinates $scplayer

    // no peds nearby
    foundPed = 0x666
    foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} -1 // CharSearchFilter.Any
    assert_result_true()
    assert_eq(foundPed, $scplayer)
end


function test4()
    int foundPed
    
    float x, y, z
    x, y, z = get_char_coordinates $scplayer
    
    int pedA = SpawnPed(7)
    int pedB = SpawnPed(7)
    mark_char_as_no_longer_needed pedB
    
    // #1
    foundPed = 0x666
    foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} false {filter} -1 // CharSearchFilter.Any
    assert_result_true()
    assert_one_of_3(foundPed, $scplayer, pedA, pedB)
    
    // #2
    foundPed = 0x666
    foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} true {filter} -1 // CharSearchFilter.Any
    assert_result_true()
    assert_one_of_3(foundPed, $scplayer, pedA, pedB)
    
    // #3
    foundPed = 0x666
    foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} true {filter} -1 // CharSearchFilter.Any
    assert_result_true()
    assert_one_of_3(foundPed, $scplayer, pedA, pedB)
    
    // no more to find
    foundPed = 0x666
    foundPed = get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 50.0 {findNext} true {filter} -1 // CharSearchFilter.Any
    assert_result_false()
    assert_eq(foundPed, -1)
    
    delete_char pedA
    delete_char pedB
end


function SpawnPed(modelIdx: int): int
    float x, y, z
    x = generate_random_float_in_range {min} -5.0 {max} 5.0
    y = generate_random_float_in_range {min} 4.0 {max} 6.0
    z = -1.0

    x, y, z = get_offset_from_char_in_world_coords $scplayer {offset} x y z
    
    request_model modelIdx
    load_all_models_now
    int pedHandle = create_char {type} PedType.CivMale {model} modelIdx {pos} x y z
    mark_model_as_no_longer_needed modelIdx
    
    return pedHandle
end

