{$CLEO .s}
{$INCLUDE_ONCE ../cleo_tester.inc}

script_name '2508'
test("2508 (set_audio_stream_progress)", tests)
terminate_this_custom_script

const Test_File = ".\Speech.mp3"

function tests
    int stream
    before_each(@setup)
    after_each(@cleanup)

    it("should set progress", test1)
    return
    

    :setup
        stream = load_audio_stream Test_File
        assert_result_true()
    return


    :cleanup
        remove_audio_stream stream
        stream = -1
    return


    function test1(stream: int)
        float progress
                
        // set after loaded
        set_audio_stream_progress stream {progress} 0.5
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.499, 0.501)
        
        // still same later
        wait {time} 0
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.499, 0.501)
        
        // used when playback started
        set_audio_stream_state stream {action} AudioStreamAction.Play
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.499, 0.501)

        wait {time} 0
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.499, 0.510)
        
        // still same after stopped
        set_audio_stream_state stream {action} AudioStreamAction.Stop
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.499, 0.510)
        
        // sets progress of stopped stream
        set_audio_stream_progress stream {progress} 0.25
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.249, 0.251)
        
        // still same after resume
        set_audio_stream_state stream {action} AudioStreamAction.Play
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.249, 0.260)
        
        wait {time} 0
        progress = -1.0
        progress = get_audio_stream_progress stream
        assert_rangef(progress, 0.249, 0.260)
    end
end
