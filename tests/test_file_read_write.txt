{$CLEO .cs}
{$USE file}
{$USE debug}

debug_on
wait 3000

var 5@ : Integer
var 6@ : Integer

copy_file "cleo\.cleo.log" {to} "cleo\.cleo_test.log"
while true
    if
        // test 0A9A
        0@ = open_file "cleo\.cleo_test.log" {mode} "r+" // read and write
    then
        print_formatted_now "0A9A File opened" time 1000
        wait 1000
    
        // test 0A9C
        1@ = get_file_size 0@
        print_formatted_now "0A9C File size: %d" time 2000 1@
        wait 2000
    
        // test 0A9D
        5@ = 0xCCCCCCCC
        0A9D: readfile 0@ size 2 to 5@
        print_formatted_now "0A9D Read WORD %x" time 2000 5@
        wait 2000

        // test 0A9E
        5@ = 0xAABBCCDD
        0A9E: write_file 0@ size 2 from 5@
        0AD5: file 0@ seek -2 from_origin SeekOrigin.Current //IF and SET
        5@ = 0
        0A9D: readfile 0@ size 2 to 5@
        if
            5@ == 0xCCDD
        then
            print_formatted_now "0A9E ok" time 1000
            wait 1000
        else
            print_formatted_now "~r~0A9E failed~n~read: 0x%X, expected: 0xCCDD" time 5000 5@
            wait 5000
        end
        
        // test 0AD5
        0A9D: readfile 0@ size 4 to 5@
        if
            0AD5: file 0@ seek -2 from_origin SeekOrigin.Current //IF and SET
        then
            0A9D: readfile 0@ size 4 to 6@
            if
                5@ <> 6@
            then
                print_formatted_now "0AD5 ok" time 1000
                wait 1000
            else
                print_formatted_now "~r~0AD5 invalid result" time 5000
                wait 5000
            end
        else
            print_formatted_now "~r~0AD5 seek back failed" time 5000
            wait 5000
        end
        
        // test 0AD6
        if
            not is_end_of_file_reached 0@
        then
            print_formatted_now "0AD6: not EOF yet" time 1000
            wait 1000
        else
            print_formatted_now "~r~0AD6: EOF reached" time 5000
            wait 5000
        end

        // test 0AD7
        0AD5: file 0@ seek 30 from_origin SeekOrigin.Current
        if
            0AD7: read_string_from_file 0@ to 1@v size 15
        then
            0ACE: print_help_formatted "0AD7 read string"
            print_formatted_now "Read: %s" time 2000 1@v
            wait 2000
        else
            print_formatted_now "~r~0AD7 failed" time 5000
            wait 5000
        end

        // test 0AD8
        if
            0AD8: write_string_to_file 0@ {text} "test text"
        then
            0AD5: file 0@ seek -9 from_origin SeekOrigin.Current
            0AD7: read_string_from_file 0@ to 1@v size 10
            
            if
                1@v == "test text"
            then
                print_formatted_now "0AD8 ok" time 1000
                wait 1000
            else
                print_formatted_now "~r~0AD8 invalid result~n~%s" time 5000 1@v
                wait 5000
            end
        else
            print_formatted_now "~r~0AD8 failed to write" time 5000
            wait 5000
        end
        
        // test 0AD9
        0AD9: write_formatted_string_to_file 0@ {format} "%x%X%s" {args} 0xA 0xB "CD"
        0AD5: file 0@ seek -4 from_origin SeekOrigin.Current
        0AD7: read_string_from_file 0@ to 1@v size 5
        if
            1@v == "aBCD"
        then
            print_formatted_now "0AD9 ok" time 1000
            wait 1000
        else
            print_formatted_now "~r~0AD9 invalid result~n~%s" time 5000 1@v
            wait 5000
        end
        
        // test 0ADA
        0AD8: write_string_to_file 0@ {text} "5:17 3.1415 END"
        0AD5: file 0@ seek -15 from_origin SeekOrigin.Current
        if
            0ADA: scan_file 0@ {format} "%d:%d %f" {nValues} 5@ {values} 6@ 7@ 8@
        then
            if and
                5@ == 3
                6@ == 5
                7@ == 17
                8@ == 3.1415
            then
                0AD7: read_string_from_file 0@ to 1@v size 5
                if
                    1@v == " END"
                then
                    print_formatted_now "0ADA ok" time 1000
                    wait 1000
                else
                    print_formatted_now "~r~0ADA post check fail~n~%s" time 5000 1@v
                    wait 5000
                end
            else
                print_formatted_now "~r~0ADA invalid result~n~%d %d %d %f" time 5000 5@ 6@ 7@ 8@
                wait 5000
            end
        else
            print_formatted_now "~r~0ADA failed. Read args: %d" time 5000 5@
            wait 5000
        end
        
        // test 2300
        2300: get_file_position 0@ {store_to} 5@
        0AD8: write_string_to_file 0@ {text} "abc"
        2300: get_file_position 0@ {store_to} 6@
        6@ -= 5@
        if
            6@ == 3
        then
            print_formatted_now "2300 ok" time 1000
            wait 1000
        else
            print_formatted_now "~r~2300 failed. Difference: %d" time 1000 6@
            wait 1000
        end
        
        // test 2301
        0AD8: write_string_to_file 0@ {text} "test text"
        0AD5: file 0@ seek -9 from_origin SeekOrigin.Current
        1@ = 0
        2@ = 0
        3@ = 0
        4@ = 0
        5@ = get_var_pointer 1@
        if
            2301: read_block_from_file 0@ {size} 9 {buffer} 5@
        then
            if
                1@v == "test text"
            then
                print_formatted_now "2301 ok" time 1000
                wait 1000
            else
                print_formatted_now "~r~2301 invalid result~n~%s" time 5000 1@v
                wait 5000
            end
        else
            print_formatted_now "~r~2301 failed to read" time 5000
            wait 5000
        end

        // test 0A9B
        0A9B: close_file 0@
    else
        print_formatted_now "Failed to open the file" time 5000
    end
    
    print_formatted_now "Finished testing file read write opcodes" time 5000
    wait 5000
end
